{"version":3,"sources":["components/UploadSection.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["props","name","action","method","withCredentials","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","concat","error","UploadSection","react_default","a","createElement","upload","es_button","icon","UploadOutlined","Header","Layout","Footer","Content","App","layout","row","col","xs","sm","md","lg","xl","src","alt","components_UploadSection","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","dist","src_App"],"mappings":"yQAKMA,EAAqB,CACzBC,KAAM,SACNC,OAAQ,qCACRC,OAAQ,OACRC,iBAAiB,EACjBC,QAAS,CACPC,cAAe,sBAIjBC,SAAQ,SAACC,GACkB,cAArBA,EAAKC,KAAKC,QACVC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEL,SAArBL,EAAKC,KAAKC,OACZI,IAAQC,QAAO,GAAAC,OAAIR,EAAKC,KAAKR,KAAI,gCACL,UAArBO,EAAKC,KAAKC,QACjBI,IAAQG,MAAK,GAAAD,OAAIR,EAAKC,KAAKR,KAAI,2BAWlBiB,EANW,WAAH,OACvBC,EAAAC,EAAAC,cAACC,EAAA,EAAWtB,EACVmB,EAAAC,EAAAC,cAACE,EAAA,EAAM,CAACC,KAAML,EAAAC,EAAAC,cAACI,EAAA,EAAc,OAAK,qBCxBlCC,SAA4BC,IAA5BD,QAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAyBTC,EAvBH,WACV,OAAOX,EAAAC,EAAAC,cAACU,EAAA,EAAM,KACZZ,EAAAC,EAAAC,cAACK,EAAM,KACLP,EAAAC,EAAAC,cAACW,EAAA,EAAG,KACFb,EAAAC,EAAAC,cAACY,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACnCnB,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,YAAYC,IAAI,UAE3BrB,EAAAC,EAAAC,cAACY,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAG,OAG3CnB,EAAAC,EAAAC,cAACY,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAI,SAK7CnB,EAAAC,EAAAC,cAACQ,EAAO,KACRV,EAAAC,EAAAC,cAACoB,EAAa,OAGdtB,EAAAC,EAAAC,cAACO,EAAM,KAAE,YCZEc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,cCFDY,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHxC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,WAAU,KACfzC,EAAAC,EAAAC,cAACwC,EAAA,EAAa,KACZ1C,EAAAC,EAAAC,cAACyC,EAAG,SAQVpB","file":"static/js/main.bb99f73b.chunk.js","sourcesContent":["import React from 'react';\nimport { UploadOutlined } from '@ant-design/icons';\nimport type { UploadProps } from 'antd';\nimport { Button, message, Upload } from 'antd';\n\nconst props: UploadProps = {\n  name: 'myFile',\n  action: 'http://localhost:3333/upload_to_s3',\n  method: 'POST',\n  withCredentials: true,\n  headers: {\n    authorization: 'authorization-text',\n    \n  },\n\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n    }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nconst UploadSection: React.FC = () => (\n      <Upload {...props}>\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\n      </Upload>\n      );\n\n      export default UploadSection;","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport UploadSection from './components/UploadSection';\nimport 'antd/dist/reset.css';\n\nconst { Header, Footer, Content } = Layout;\n\nconst App = () => {\n  return <Layout>\n    <Header>\n      <Row>\n        <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n          <img src=\"./QAS.svg\" alt=\"logo\" />\n        </Col>\n        <Col xs={20} sm={16} md={12} lg={8} xl={4}>\n          Col\n        </Col>\n        <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n          Col\n        </Col>\n      </Row>\n    </Header>\n    <Content>\n    <UploadSection />\n\n    </Content>\n    <Footer >Footer</Footer>\n  </Layout>;\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}